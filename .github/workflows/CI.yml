name: Build and push image

on:
  push:
    # Publish `master` as Docker `latest` image.
    branches:
      - master
      - seed
      - dev

    # Publish `v1.2.3` tags as releases.
    tags:
      - v*

  # Run tests for any PRs.
  pull_request:

env:
  IMAGE_NAME: train-router


jobs:
  # Push image to GitHub Packages.
  # See also https://docs.docker.com/docker-hub/builds/

  test-and-codecov:
    runs-on: [ self-hosted, linux, x64, docker ]
    env:
      HARBOR_URL: ${{ secrets.DEV_REGISTRY_URL }}
      HARBOR_USER: ${{ secrets.DEV_REGISTRY_USER }}
      HARBOR_PW: ${{ secrets.DEV_REGISTRY_PASSWORD }}
      VAULT_URL: ${{ secrets.DEV_VAULT_URL }}
      VAULT_TOKEN: ${{ secrets.DEV_VAULT_TOKEN }}
    steps:
      - uses: actions/checkout@v2
      - name: Run container tests
        run: |
          docker-compose up -d --build test-train-router redis rabbitmq
          docker wait test-train-router
      - uses: codecov/codecov-action@v2
        with:
          token: ${{ secrets.CODECOV_TOKEN }} # not required for public repos
          files: ./coverage/coverage.xml # optional
          name: codecov-umbrella # optional
          fail_ci_if_error: true # optional (default = false)
          verbose: true # optional (default = false)



  build-and-push-image:
    runs-on: [ self-hosted, linux, x64, docker ]
    permissions:
      packages: write
      contents: read

    steps:
      - uses: actions/checkout@v2

      - name: Build image
        run: docker build . --file Dockerfile --tag $IMAGE_NAME --label "runnumber=${GITHUB_RUN_ID}"

      - name: Log in to registry
        # This is where you will update the PAT to GITHUB_TOKEN
        run: echo "${{ secrets.GITHUB_TOKEN }}" | docker login ghcr.io -u ${{ github.actor }} --password-stdin

      - name: Scan image
        uses: Azure/container-scan@v0
        with:
          image-name: ${{ env.IMAGE_NAME }}

      - name: Push image
        run: |
          IMAGE_ID=ghcr.io/${{ github.repository_owner }}/$IMAGE_NAME

          # Change all uppercase to lowercase
          IMAGE_ID=$(echo $IMAGE_ID | tr '[A-Z]' '[a-z]')
          # Strip git ref prefix from version
          VERSION=$(echo "${{ github.ref }}" | sed -e 's,.*/\(.*\),\1,')
          # Strip "v" prefix from tag name
          [[ "${{ github.ref }}" == "refs/tags/"* ]] && VERSION=$(echo $VERSION | sed -e 's/^v//')
          # Use Docker `latest` tag convention
          [ "$VERSION" == "master" ] && VERSION=latest
          [ "$VERSION" == "dev" ] && VERSION=dev
          echo IMAGE_ID=$IMAGE_ID
          echo VERSION=$VERSION
          docker tag $IMAGE_NAME $IMAGE_ID:$VERSION
          docker push $IMAGE_ID:$VERSION
